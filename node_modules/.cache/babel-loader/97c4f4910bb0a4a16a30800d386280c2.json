{"ast":null,"code":"import _classCallCheck from \"/Users/willstone/github/prep work/pokedex/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/willstone/github/prep work/pokedex/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/willstone/github/prep work/pokedex/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/willstone/github/prep work/pokedex/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/willstone/github/prep work/pokedex/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/willstone/github/prep work/pokedex/pokedex/src/components/App.js\";\nimport React from \"react\";\nimport Pokemon from './Pokemon';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allPokemon: [],\n      fetched: false,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        _this2.setState({\n          allPokemon: response.results,\n          loading: true,\n          fetched: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          fetched = _this$state.fetched,\n          loading = _this$state.loading,\n          allPokemon = _this$state.allPokemon;\n      var content;\n\n      if (fetched) {\n        content = React.createElement(\"div\", {\n          className: \"pokemon--species--list\",\n          style: {\n            backgroundImage: url('../../public/images/body_bg.png')\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, allPokemon.map(function (pokemon, index) {\n          return React.createElement(Pokemon, {\n            key: pokemon.name,\n            id: index + 1,\n            pokemon: pokemon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        }));\n      } else if (loading && !fetched) {\n        content = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \" Loading ...\");\n      } else {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/willstone/github/prep work/pokedex/pokedex/src/components/App.js"],"names":["React","Pokemon","App","state","allPokemon","fetched","loading","setState","fetch","then","res","json","response","results","content","backgroundImage","url","map","pokemon","index","name","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAIMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,UAAU,EAAG,EADT;AAEJC,MAAAA,OAAO,EAAG,KAFN;AAGJC,MAAAA,OAAO,EAAG;AAHN,K;;;;;;yCAMc;AAAA;;AAClB,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAG;AADE,OAAd;AAGAE,MAAAA,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyD,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OAA5D,EACCF,IADD,CACM,UAAAG,QAAQ,EAAE;AACd,QAAA,MAAI,CAACL,QAAL,CAAc;AACZH,UAAAA,UAAU,EAAGQ,QAAQ,CAACC,OADV;AAEZP,UAAAA,OAAO,EAAG,IAFE;AAGZD,UAAAA,OAAO,EAAG;AAHE,SAAd;AAKD,OAPD;AAQD;;;6BAEK;AAAA,wBACmC,KAAKF,KADxC;AAAA,UACGE,OADH,eACGA,OADH;AAAA,UACYC,OADZ,eACYA,OADZ;AAAA,UACqBF,UADrB,eACqBA,UADrB;AAEJ,UAAIU,OAAJ;;AACA,UAAGT,OAAH,EAAW;AACTS,QAAAA,OAAO,GAAG;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAwC,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAEC,GAAG,CAAC,iCAAD;AAArB,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACLZ,UAAU,CAACa,GAAX,CAAe,UAACC,OAAD,EAASC,KAAT;AAAA,iBAAiB,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAED,OAAO,CAACE,IAAtB;AAA4B,YAAA,EAAE,EAAED,KAAK,GAAC,CAAtC;AAAyC,YAAA,OAAO,EAAED,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AAAA,SAAf,CADK,CAAV;AAED,OAHD,MAGM,IAAGZ,OAAO,IAAI,CAACD,OAAf,EAAuB;AACzBS,QAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAV;AACH,OAFK,MAGF;AACFA,QAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACD;;AACD,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACLA,OADK,CAAR;AAGD;;;;EApCWd,KAAK,CAACqB,S;;AAuCxB,eAAenB,GAAf","sourcesContent":["import React from \"react\";\nimport Pokemon from './Pokemon';\n\n\n\nclass App extends React.Component {\n    state = {\n        allPokemon : [],\n        fetched : false,\n        loading : false,\n      };\n\n      componentWillMount(){\n        this.setState({\n          loading : true\n        });\n        fetch('http://pokeapi.co/api/v2/pokemon?limit=151').then(res=>res.json())\n        .then(response=>{\n          this.setState({\n            allPokemon : response.results,\n            loading : true,\n            fetched : true\n          });\n        });\n      }\n\n    render(){\n        const {fetched, loading, allPokemon} = this.state;\n        let content ;\n        if(fetched){\n          content = <div className=\"pokemon--species--list\" style={{backgroundImage: url('../../public/images/body_bg.png')}}>\n              {allPokemon.map((pokemon,index)=><Pokemon key={pokemon.name} id={index+1} pokemon={pokemon}/>)}</div>;\n        }else if(loading && !fetched){\n            content = <p> Loading ...</p>;\n        }\n        else{\n          content = <div/>;\n        }\n        return  <div>\n          {content}\n        </div>;\n      }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}